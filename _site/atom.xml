<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>aldogint</title>
 <link href="http://localhost:4000/blog/atom.xml" rel="self"/>
 <link href="http://localhost:4000/blog/"/>
 <updated>2017-05-13T05:28:50+07:00</updated>
 <id>http://localhost:4000</id>
 <author>
   <name>Aldo Ginting</name>
   <email>aldoutamaginting@gmail.com</email>
 </author>

 
 <entry>
   <title>TK-102B GPS Tracker Packet</title>
   <link href="http://localhost:4000/2017/05/06/TK102-B-Packet/"/>
   <updated>2017-05-06T00:00:00+07:00</updated>
   <id>http://localhost:4000/blog/2017/05/06/TK102-B-Packet</id>
   <content type="html">&lt;p&gt;Recently i’m working with TK-102B GPS Tracker to make realtime bus tracker which will be accessible via Android phone. I was able to configure the device to send GPS information to my server. Unfortunalely, it’s sent in specific format that’s not described in device’s manual.&lt;/p&gt;

&lt;p&gt;Digging information to parse this data was harder than i imagined. But thanks to &lt;a href=&quot;https://traccar.org&quot;&gt;traccar&lt;/a&gt; and other project on github that i unfortunately i can’t remember, i finally manage to parse this information after reading their source code.
&lt;!--more--&gt;&lt;/p&gt;

&lt;h3 id=&quot;packet-formats&quot;&gt;Packet Formats&lt;/h3&gt;
&lt;p&gt;This GPS tracker device send information in (at least) three possible formats:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;(089072975034BO01255170422V0746.2053S11022.3651E000.1085146000.00,510,011,25323,45481,16,25323,34627,15,25323,45482,15,00000000L00000000)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;(087072975034BR00170426V0746.2066S11022.3650E000.2075501000.00,510,011,25323,45481,26,0,0,0,0,0,0,00000000L00000000)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;087072975034BP00HSO&lt;/code&gt; (this one is probably handshake message)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These formats have same first 12 characters which is its unique identifier. It’s built by prepending &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt; to last 11 digits of IMEI. Then it’s followed by &lt;code class=&quot;highlighter-rouge&quot;&gt;'B'+...n chars&lt;/code&gt; which is probably command idenfifier. After that, information about gps and device informations follow.&lt;/p&gt;

&lt;h3 id=&quot;parsing&quot;&gt;Parsing&lt;/h3&gt;
&lt;p&gt;After which figuring part of message i do need, i write a simple script to test it.&lt;/p&gt;
&lt;noscript&gt;&lt;pre&gt;/** begin testing */
var s = String(d);

var id = s.substr(1, 12);
// console.log(&amp;#39;id: &amp;#39;+id);

s = s.substr(13);

var command = s.substr(0, 2);
console.log(&amp;quot;command &amp;quot;+command)

s = s.substr(2);

if (command == &amp;#39;BO&amp;#39;) {
	var commandValue = s.substr(0, 5);
	s = s.substr(5);
	// console.log(&amp;#39;BO executed&amp;#39;);	
}
else if (command == &amp;#39;BR&amp;#39;) {
	var commandValue = s.substr(0, 2);
	s = s.substr(2);		
	// console.log(&amp;#39;BR executed&amp;#39;);		
}
else if (command == &amp;#39;BP&amp;#39;) {
	var commandValue = s.substr(0, 5);
	s = s.substr(5);		
	// console.log(&amp;#39;BP executed&amp;#39;);		
}
// console.log(&amp;#39;command value: &amp;#39;+commandValue);

var ymd = parseFloat(s.substr(0, 6));
// console.log(&amp;quot;date (in &amp;#39;ymd&amp;#39; format):&amp;quot;+ ymd);

s = s.substr(6);

var valid = s.substr(0, 1);
// console.log(&amp;quot;valid?: &amp;quot;+ valid);

s = s.substr(1);

// latitude
var lat = (s.indexOf(&amp;#39;S&amp;#39;)) ? s.substr(0, s.indexOf(&amp;#39;S&amp;#39;)) : s.substr(0, s.indexOf(&amp;#39;N&amp;#39;));
// console.log(&amp;quot;lat: &amp;quot;+lat);

// real latitude
var latD = parseFloat(lat.slice(0, -7));
var latM = parseFloat(lat.substr(lat.length-7));
var realLat = latD + latM/60;
// console.log(&amp;#39;real latD: &amp;#39;+ latD + &amp;#39; latM: &amp;#39; +latM);

s = s.substr(lat.length);

// north or south
var nos = s.substr(0, 1);
// console.log(&amp;quot;nos: &amp;quot; + nos);

s = s.substr(1);

// actual lat
var acLat = (nos == &amp;#39;S&amp;#39;) ? -1*realLat : realLat;
// console.log(&amp;#39;actual lat: &amp;#39; + acLat);

// longitude
var lng = (s.indexOf(&amp;#39;E&amp;#39;)) ? s.substr(0, s.indexOf(&amp;#39;E&amp;#39;)) : s.substr(0, s.indexOf(&amp;#39;W&amp;#39;));
// console.log(&amp;quot;lng: &amp;quot;+lng);

// real longitude
var lngD = parseFloat(lng.slice(0, -7));
var lngM = parseFloat(lng.substr(lng.length-7));
var realLng = lngD + lngM/60;
// console.log(&amp;#39;real lng: &amp;#39;+ realLng);

s = s.substr(lng.length);

// east or west
var eow = s.substr(0, 1);
// console.log(&amp;quot;eow: &amp;quot; + eow);

s = s.substr(1);

// actual longitude
var acLng = (eow == &amp;#39;S&amp;#39;) ? -1*realLng : realLng;
// console.log(&amp;#39;actual lng: &amp;#39; + acLng);

// speed		
var speed = s.substr(0, 5);
// console.log(&amp;#39;speed: &amp;#39;+speed);

s = s.substr(5);

// time		
var time = s.substr(0, 6);
// console.log(&amp;#39;time: &amp;#39;+time);

s = s.substr(6);

// heading		
var heading = s.substr(0, 6);
// console.log(&amp;#39;heading: &amp;#39;+heading);

s = s.substr(6);

// console.log(&amp;#39;unknown: &amp;#39; + s);

/** end of testing */&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/aldogint/f350d44037dff96de414106bc04caea9.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;That’s it, we can finally parse message sent by this device.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Example content</title>
   <link href="http://localhost:4000/2014/01/01/example-content/"/>
   <updated>2014-01-01T00:00:00+07:00</updated>
   <id>http://localhost:4000/blog/2014/01/01/example-content</id>
   <content type="html">&lt;div class=&quot;message&quot;&gt;
  Howdy! This is an example blog post that shows several types of HTML content supported in this theme.
&lt;/div&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis &lt;a href=&quot;#&quot;&gt;dis parturient montes&lt;/a&gt;, nascetur ridiculus mus. &lt;em&gt;Aenean eu leo quam.&lt;/em&gt; Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Curabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Etiam porta &lt;strong&gt;sem malesuada magna&lt;/strong&gt; mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.&lt;/p&gt;

&lt;h2 id=&quot;inline-html-elements&quot;&gt;Inline HTML elements&lt;/h2&gt;

&lt;p&gt;HTML defines a long list of available inline tags, a complete list of which can be found on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element&quot;&gt;Mozilla Developer Network&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;To bold text&lt;/strong&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;To italicize text&lt;/em&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;em&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Abbreviations, like &lt;abbr title=&quot;HyperText Markup Langage&quot;&gt;HTML&lt;/abbr&gt; should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;abbr&amp;gt;&lt;/code&gt;, with an optional &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt; attribute for the full phrase.&lt;/li&gt;
  &lt;li&gt;Citations, like &lt;cite&gt;— Mark otto&lt;/cite&gt;, should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;cite&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;Deleted&lt;/del&gt; text should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;del&amp;gt;&lt;/code&gt; and &lt;ins&gt;inserted&lt;/ins&gt; text should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;ins&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Superscript &lt;sup&gt;text&lt;/sup&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sup&amp;gt;&lt;/code&gt; and subscript &lt;sub&gt;text&lt;/sub&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sub&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most of these elements are styled by browsers with few modifications on our part.&lt;/p&gt;

&lt;h2 id=&quot;heading&quot;&gt;Heading&lt;/h2&gt;

&lt;p&gt;Vivamus sagittis lacus vel augue rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.&lt;/p&gt;

&lt;h3 id=&quot;code&quot;&gt;Code&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis &lt;code class=&quot;highlighter-rouge&quot;&gt;code element&lt;/code&gt; montes, nascetur ridiculus mus.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Example can be run directly in your JavaScript console&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Create a function that takes two arguments and returns the sum of those arguments&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;return a + b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Call the function&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// &amp;gt; 8&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa.&lt;/p&gt;

&lt;h3 id=&quot;lists&quot;&gt;Lists&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Praesent commodo cursus magna, vel scelerisque nisl consectetur et.&lt;/li&gt;
  &lt;li&gt;Donec id elit non mi porta gravida at eget metus.&lt;/li&gt;
  &lt;li&gt;Nulla vitae elit libero, a pharetra augue.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Donec ullamcorper nulla non metus auctor fringilla. Nulla vitae elit libero, a pharetra augue.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Vestibulum id ligula porta felis euismod semper.&lt;/li&gt;
  &lt;li&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.&lt;/li&gt;
  &lt;li&gt;Maecenas sed diam eget risus varius blandit sit amet non magna.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Cras mattis consectetur purus sit amet fermentum. Sed posuere consectetur est at lobortis.&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;HyperText Markup Language (HTML)&lt;/dt&gt;
  &lt;dd&gt;The language used to describe and define the content of a Web page&lt;/dd&gt;

  &lt;dt&gt;Cascading Style Sheets (CSS)&lt;/dt&gt;
  &lt;dd&gt;Used to describe the appearance of Web content&lt;/dd&gt;

  &lt;dt&gt;JavaScript (JS)&lt;/dt&gt;
  &lt;dd&gt;The programming language used to build advanced Web sites and applications&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;h3 id=&quot;tables&quot;&gt;Tables&lt;/h3&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Upvotes&lt;/th&gt;
      &lt;th&gt;Downvotes&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tfoot&gt;
    &lt;tr&gt;
      &lt;td&gt;Totals&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Alice&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Bob&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Charlie&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Nullam id dolor id nibh ultricies vehicula ut id elit. Sed posuere consectetur est at lobortis. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Want to see something else added? &lt;a href=&quot;https://github.com/poole/poole/issues/new&quot;&gt;Open an issue.&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 

</feed>
